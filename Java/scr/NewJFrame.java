
import java.util.HashSet;
import java.util.Set;
import javax.swing.table.*;
import java.awt.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ms255053
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private final static String MESSAGE_OK = "Message:";
    private final static String newline = "\n";
    private final static String defaultDataType=" VARCHAR(1000)";
    private final static String MESSAGE_SCRIPT="script_example.tpt";
    
    public NewJFrame() {
        initComponents();
        limpiarVentana();
        setResizable(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(dim.width/2-getSize().width/2, dim.height/2-getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlVentanaPrincipal = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tabPanelJob = new javax.swing.JTabbedPane();
        pnlJob = new javax.swing.JPanel();
        lblInputPath = new javax.swing.JLabel();
        txtInputPath = new javax.swing.JTextField();
        lblInputPath1 = new javax.swing.JLabel();
        txtFileName = new javax.swing.JTextField();
        lblInputPath2 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblInputPath3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        txtErr1Table = new javax.swing.JTextField();
        txtServer = new javax.swing.JTextField();
        txtDataBaseName = new javax.swing.JTextField();
        txtWorkTable = new javax.swing.JTextField();
        txtLogTable = new javax.swing.JTextField();
        lblInputPath4 = new javax.swing.JLabel();
        lblInputPath5 = new javax.swing.JLabel();
        lblInputPath6 = new javax.swing.JLabel();
        lblInputPath7 = new javax.swing.JLabel();
        lblInputPath8 = new javax.swing.JLabel();
        lblInputPath9 = new javax.swing.JLabel();
        txtErr2Table = new javax.swing.JTextField();
        lblInputPath10 = new javax.swing.JLabel();
        txtJobName = new javax.swing.JTextField();
        lblInputPath11 = new javax.swing.JLabel();
        txtDelimiter = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtColumnName = new javax.swing.JTextField();
        cboDataType = new javax.swing.JComboBox<>();
        txtLength = new javax.swing.JTextField();
        txtTotalDigits = new javax.swing.JTextField();
        txtFractionalDigits = new javax.swing.JTextField();
        chkIspk = new javax.swing.JCheckBox();
        chkIspi = new javax.swing.JCheckBox();
        bntAddColumn = new javax.swing.JButton();
        bntDelColumn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblColumns = new javax.swing.JTable();
        gntGenerar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaScript = new javax.swing.JTextArea();
        lblScript = new javax.swing.JLabel();

        pnlVentanaPrincipal.setName(""); // NOI18N

        javax.swing.GroupLayout pnlVentanaPrincipalLayout = new javax.swing.GroupLayout(pnlVentanaPrincipal);
        pnlVentanaPrincipal.setLayout(pnlVentanaPrincipalLayout);
        pnlVentanaPrincipalLayout.setHorizontalGroup(
            pnlVentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pnlVentanaPrincipalLayout.setVerticalGroup(
            pnlVentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generaci√≥n de Script TPT");

        tabPanelJob.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabPanelJob.setName(""); // NOI18N

        lblInputPath.setText("Input path");

        txtInputPath.setName(""); // NOI18N
        txtInputPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputPathActionPerformed(evt);
            }
        });

        lblInputPath1.setText("File Name");

        txtFileName.setName(""); // NOI18N
        txtFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFileNameActionPerformed(evt);
            }
        });

        lblInputPath2.setText("User Name");

        txtUserName.setName(""); // NOI18N
        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        lblInputPath3.setText("Password");

        txtPassword.setName(""); // NOI18N
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        txtErr1Table.setName(""); // NOI18N
        txtErr1Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtErr1TableActionPerformed(evt);
            }
        });

        txtServer.setName(""); // NOI18N
        txtServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServerActionPerformed(evt);
            }
        });

        txtDataBaseName.setName(""); // NOI18N
        txtDataBaseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataBaseNameActionPerformed(evt);
            }
        });

        txtWorkTable.setName(""); // NOI18N
        txtWorkTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWorkTableActionPerformed(evt);
            }
        });

        txtLogTable.setName(""); // NOI18N
        txtLogTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLogTableActionPerformed(evt);
            }
        });

        lblInputPath4.setText("Server");

        lblInputPath5.setText("DataBase Name");

        lblInputPath6.setText("Work Table");

        lblInputPath7.setText("Log Table");

        lblInputPath8.setText("Error1 Table");

        lblInputPath9.setText("Error2 Table");

        txtErr2Table.setName(""); // NOI18N
        txtErr2Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtErr2TableActionPerformed(evt);
            }
        });

        lblInputPath10.setText("Job Name");

        txtJobName.setName(""); // NOI18N
        txtJobName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJobNameActionPerformed(evt);
            }
        });
        txtJobName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtJobNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtJobNameKeyReleased(evt);
            }
        });

        lblInputPath11.setText("Delimiter");

        txtDelimiter.setName(""); // NOI18N
        txtDelimiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDelimiterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlJobLayout = new javax.swing.GroupLayout(pnlJob);
        pnlJob.setLayout(pnlJobLayout);
        pnlJobLayout.setHorizontalGroup(
            pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlJobLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlJobLayout.createSequentialGroup()
                        .addComponent(lblInputPath11, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlJobLayout.createSequentialGroup()
                        .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlJobLayout.createSequentialGroup()
                                    .addComponent(lblInputPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(5, 5, 5))
                                .addGroup(pnlJobLayout.createSequentialGroup()
                                    .addComponent(lblInputPath1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(10, 10, 10))
                                .addGroup(pnlJobLayout.createSequentialGroup()
                                    .addComponent(lblInputPath3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(10, 10, 10))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlJobLayout.createSequentialGroup()
                                    .addComponent(lblInputPath2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(pnlJobLayout.createSequentialGroup()
                                    .addComponent(lblInputPath4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlJobLayout.createSequentialGroup()
                                    .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblInputPath6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInputPath5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(pnlJobLayout.createSequentialGroup()
                                    .addComponent(lblInputPath7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(pnlJobLayout.createSequentialGroup()
                                    .addComponent(lblInputPath8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(pnlJobLayout.createSequentialGroup()
                                    .addComponent(lblInputPath9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(pnlJobLayout.createSequentialGroup()
                                .addComponent(lblInputPath10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))
                        .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtErr1Table, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                            .addComponent(txtLogTable, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtWorkTable, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataBaseName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtServer, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUserName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFileName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInputPath, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtJobName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtErr2Table))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        pnlJobLayout.setVerticalGroup(
            pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlJobLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInputPath10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJobName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblInputPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtInputPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataBaseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWorkTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLogTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtErr1Table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtErr2Table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlJobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInputPath11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabPanelJob.addTab("Job TPT", pnlJob);

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Name");

        jLabel2.setText("Data Type");

        jLabel3.setText("Length");

        jLabel4.setText("Decimal Total Digists");

        jLabel5.setText("Decimal Fractional Digists");

        jLabel6.setText("Is Primary Key?");

        jLabel7.setText("Is Primary Index?");

        cboDataType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Byteint", "Char", "Date", "Decimal", "Integer", "Smallint", "Timestamp", "Varchar" }));
        cboDataType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDataTypeItemStateChanged(evt);
            }
        });

        bntAddColumn.setText("+");
        bntAddColumn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntAddColumnMouseClicked(evt);
            }
        });

        bntDelColumn.setText("-");
        bntDelColumn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntDelColumnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chkIspi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntAddColumn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntDelColumn))
                    .addComponent(txtColumnName)
                    .addComponent(cboDataType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtLength)
                    .addComponent(txtTotalDigits, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(txtFractionalDigits, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chkIspk)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtColumnName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboDataType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTotalDigits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtFractionalDigits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(chkIspk))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(chkIspi)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntAddColumn)
                            .addComponent(bntDelColumn))))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Add Fields", jPanel1);

        tblColumns.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Column Name", "Data Type", "Length", "Dec. Total", "Dec. Fractional", "PK", "PI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblColumns);

        gntGenerar.setText("Generar");
        gntGenerar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gntGenerarMouseClicked(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevoMouseClicked(evt);
            }
        });

        lblMessage.setText("Message:");

        txaScript.setColumns(20);
        txaScript.setRows(5);
        jScrollPane3.setViewportView(txaScript);

        lblScript.setText("Script TPT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabPanelJob, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gntGenerar))
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblScript)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tabPanelJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblScript)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(gntGenerar)
                    .addComponent(lblMessage))
                .addGap(9, 9, 9))
        );

        tabPanelJob.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDelimiterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDelimiterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDelimiterActionPerformed

    private void txtJobNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJobNameKeyReleased
        // TODO add your handling code here:
        txtWorkTable.setText(this.txtJobName.getText() + "_WRK");
        txtLogTable.setText(this.txtJobName.getText() + "_LOG");
        txtErr1Table.setText(this.txtJobName.getText() + "_ER1");
        txtErr2Table.setText(this.txtJobName.getText() + "_ER2");
    }//GEN-LAST:event_txtJobNameKeyReleased

    private void txtJobNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJobNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJobNameKeyPressed

    private void txtJobNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJobNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJobNameActionPerformed

    private void txtErr2TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtErr2TableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtErr2TableActionPerformed

    private void txtLogTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLogTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLogTableActionPerformed

    private void txtWorkTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWorkTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWorkTableActionPerformed

    private void txtDataBaseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataBaseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataBaseNameActionPerformed

    private void txtServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtServerActionPerformed

    private void txtErr1TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtErr1TableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtErr1TableActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void txtFileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFileNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFileNameActionPerformed

    private void txtInputPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInputPathActionPerformed

    private void cboDataTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDataTypeItemStateChanged
        // TODO add your handling code here:
        int x;
        x=cboDataType.getSelectedIndex();
        switch(x)
        {
            case 1: habilitarTextoDecimal(true,false,false); break;
            case 7: habilitarTextoDecimal(true,false,false); break;
            case 3: habilitarTextoDecimal(false,true,true); break;
            default: 
                habilitarTextoDecimal(false,false,false);
        }
        
    }//GEN-LAST:event_cboDataTypeItemStateChanged

    private boolean validacionCuadroTexto(javax.swing.JTextField vCuadroDeTexto,String Mensaje)
    {
        boolean oValidacion=true;
        if(vCuadroDeTexto.isEnabled())
        {
            if(vCuadroDeTexto.getText().compareTo("")==0)   
            {
                lblMessage.setText(Mensaje);
                oValidacion=false;
            }    
        }
        return oValidacion;
    }
    
    private void agregaRegistroTabla(String itxtColumnName,String icboDataType, String itxtLength, String itxtTotalDigits,String itxtFractionalDigits,String chkIspk,String chkIspi){
            DefaultTableModel yourModel = (DefaultTableModel) this.tblColumns.getModel();
            boolean existeColumna=false;
            int i=0;
            int totalRegistros = tblColumns.getRowCount();
            
            while(existeColumna==false && i<totalRegistros)
            {
                if(itxtColumnName.trim().compareTo(yourModel.getValueAt(i, 0).toString()) == 0)
                {
                    existeColumna=true;
                    lblMessage.setText("Error: The name of the column already exists");
                }
                i++;
            }
            if(existeColumna==false)
                yourModel.addRow(new Object[]{itxtColumnName.trim(), icboDataType, itxtLength, itxtTotalDigits,itxtFractionalDigits,chkIspk,chkIspi});
    }
    
    private void limpiarTablaColumna()
    {
        int totalRegistros,i;
        totalRegistros = tblColumns.getRowCount();
        if(totalRegistros > 0)
        {
            DefaultTableModel yourModel = (DefaultTableModel) this.tblColumns.getModel();
            for(i=totalRegistros;i>0;i--)                
                yourModel.removeRow(i-1);
        }
    }
    
    private void limpiarVentana()
    {
        txtDataBaseName.setText("");
        txtDelimiter.setText("");
        txtErr1Table.setText("");
        txtErr2Table.setText("");
        txtFileName.setText("");
        txtInputPath.setText("");
        txtJobName.setText("");
        txtLogTable.setText("");
        txtPassword.setText("");
        txtServer.setText("");
        txtUserName.setText("");
        txtWorkTable.setText("");
        txtColumnName.setText("");
        cboDataType.setSelectedIndex(0);
        habilitarTextoDecimal(false,false,false);
        chkIspk.setSelected(false);
        chkIspi.setSelected(false);
        limpiarTablaColumna();
        txaScript.setEditable(false);
        txaScript.setText("");
        lblMessage.setText(MESSAGE_OK);
        lblScript.setText(MESSAGE_SCRIPT);
        txtJobName.requestFocus();        
    }
            
            
    private void bntAddColumnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntAddColumnMouseClicked
        // TODO add your handling code here:
        String vchkIspk="0";
        String vchkIspi="0";
        boolean ivalidacion;
        lblMessage.setText(MESSAGE_OK);
        ivalidacion=validacionCuadroTexto(txtColumnName,"Error: The Column Name field is empty");
        if(ivalidacion==true)
        {    
            ivalidacion=validacionCuadroTexto(txtLength,"Error: The Length field is empty");
            if(ivalidacion==true)
            {
                ivalidacion=validacionCuadroTexto(txtTotalDigits,"Error: The Decimal Total Digits field is empty");
                if(ivalidacion==true)
                {
                    ivalidacion=validacionCuadroTexto(txtFractionalDigits,"Error: The Decimal Fractional Digits field is empty");
                    if(ivalidacion==true)
                    {
                        if(lblMessage.getText().compareTo(MESSAGE_OK)==0)
                        {
                            if (chkIspk.isSelected()) vchkIspk="1";
                            if (chkIspi.isSelected()) vchkIspi="1";
                            agregaRegistroTabla(txtColumnName.getText(),
                                    this.cboDataType.getItemAt(this.cboDataType.getSelectedIndex()).toString(),
                                    txtLength.getText(),
                                    txtTotalDigits.getText(),
                                    txtFractionalDigits.getText(),
                                    vchkIspk,
                                    vchkIspi
                                    );
                        }
                    }    
                }    
            }
        }
    }//GEN-LAST:event_bntAddColumnMouseClicked
    
    private void btnNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoMouseClicked
        // TODO add your handling code here:
        limpiarVentana();
    }//GEN-LAST:event_btnNuevoMouseClicked

    private void bntDelColumnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntDelColumnMouseClicked
        // TODO add your handling code here:
        int indice;
        indice = tblColumns.getSelectedRow();
        if(indice != -1)
        {
            DefaultTableModel yourModel = (DefaultTableModel) this.tblColumns.getModel();
            yourModel.removeRow(indice);
            lblMessage.setText(MESSAGE_OK);
        }
        else
            lblMessage.setText("Error: No Rows Selected");
    }//GEN-LAST:event_bntDelColumnMouseClicked

    private String listarIndicePrimario()
    {
        DefaultTableModel yourModel;
        int totalRegistros,i;        
        String indicePrimario="";
        String listaIndicePrimario="";
        String separator;
        
        yourModel = (DefaultTableModel) this.tblColumns.getModel();
        totalRegistros = yourModel.getRowCount();
        separator = ",";
        
        for(i=0;i<totalRegistros;i++)
        {            
            if(yourModel.getValueAt(i, 6).toString().compareTo("1") == 0) 
                listaIndicePrimario = listaIndicePrimario + yourModel.getValueAt(i, 0).toString() + separator;            
        }
        if(listaIndicePrimario.compareTo("") == 0)
            indicePrimario = " NO PRIMARY INDEX;";
        else        
            indicePrimario = " PRIMARY INDEX(" + listaIndicePrimario.substring(0, listaIndicePrimario.length()-1) + ");";
        
        return indicePrimario;
    }
    
    
    private void listarColumnas(String cadenaInicio,int agregarTipoDato)
    {
        DefaultTableModel yourModel;
        int totalRegistros,i;
        String dataType;
        String columnName;
        String fractionalD;
        String totalD;
        String length;
        String separator;
        
        yourModel = (DefaultTableModel) this.tblColumns.getModel();
        totalRegistros = yourModel.getRowCount();
        separator = ",";
        dataType = "";
        
        for(i=0;i<totalRegistros;i++)
        {
            columnName = cadenaInicio + yourModel.getValueAt(i, 0).toString();
            if(agregarTipoDato == 0) 
                dataType = ""; 
            if(agregarTipoDato == 1) 
                dataType = defaultDataType; 
            if(agregarTipoDato == 2)
            {
                dataType = yourModel.getValueAt(i, 1).toString();
                length = yourModel.getValueAt(i, 2).toString();
                totalD = yourModel.getValueAt(i, 3).toString();
                fractionalD = yourModel.getValueAt(i, 4).toString();                
                if(length.compareTo("") != 0)                
                    dataType = dataType + "(" + length + ")";
                if(totalD.compareTo("") != 0)
                    dataType = dataType + "(" + totalD + "," + fractionalD + ")";                   
            }
            
            if(i==totalRegistros-1)
                separator = "";
            
            txaScript.append(columnName + " " + dataType + " " + separator + newline);
        }
    }
    private void generarScript()
    {        
        txaScript.append("DEFINE JOB " + txtJobName.getText() + newline);
        txaScript.append("(" + newline);        
        txaScript.append("DEFINE OPERATOR W_1_o_TPT" + newline);
        txaScript.append("TYPE LOAD" + newline);
        txaScript.append("SCHEMA *" + newline);
        txaScript.append("ATTRIBUTES" + newline);
        txaScript.append("(" + newline);
        txaScript.append("VARCHAR TdpId = '" + txtServer.getText() + "'," + newline);
        txaScript.append("VARCHAR UserName = '" + txtUserName.getText() + "'," + newline);
        txaScript.append("VARCHAR UserPassword = '" + txtPassword.getText() + "'," + newline);
        txaScript.append("VARCHAR TargetTable = '" + txtDataBaseName.getText() + "." + txtJobName.getText() + "'," + newline);
        txaScript.append("VARCHAR ErrorTable1 = '" + txtDataBaseName.getText() + "." + txtErr1Table.getText() + "'," + newline);
        txaScript.append("VARCHAR ErrorTable2 = '" + txtDataBaseName.getText() + "." + txtErr2Table.getText() + "'," + newline);
        txaScript.append("VARCHAR LogTable = '" + txtDataBaseName.getText() + "." + txtLogTable.getText() + "'" + newline);
        txaScript.append(");" + newline);
        txaScript.append("DEFINE SCHEMA W_0_s_TPT" + newline);
        txaScript.append("(" + newline);
        listarColumnas("",1);
        txaScript.append(");" + newline);
        txaScript.append("DEFINE OPERATOR DDL_OPERATOR" + newline);
        txaScript.append("TYPE DDL" + newline);
        txaScript.append("ATTRIBUTES" + newline);
        txaScript.append("(" + newline);
        txaScript.append("VARCHAR TdpId = '" + txtServer.getText() + "'," + newline);
        txaScript.append("VARCHAR UserName = '" + txtUserName.getText() + "'," + newline);
        txaScript.append("VARCHAR UserPassword = '" + txtPassword.getText() + "'," + newline);
        txaScript.append("VARCHAR ARRAY ErrorList = ['3803','3807']" + newline);
        txaScript.append(");" + newline);
        txaScript.append("DEFINE OPERATOR W_0_o_TPT" + newline);
        txaScript.append("TYPE DATACONNECTOR PRODUCER" + newline);
        txaScript.append("SCHEMA W_0_s_TPT" + newline);
        txaScript.append("ATTRIBUTES" + newline);
        txaScript.append("(" + newline);
        txaScript.append("VARCHAR FileName = '" + txtFileName.getText() + "'," + newline);
        txaScript.append("VARCHAR DirectoryPath = '" + txtInputPath.getText() + "'," + newline);
        txaScript.append("VARCHAR IndicatorMode = 'N'," + newline);
        txaScript.append("VARCHAR Format = 'DELIMITED'," + newline);
        txaScript.append("VARCHAR OpenMode = 'Read'," + newline);
        txaScript.append("VARCHAR TextDelimiter = '" + txtDelimiter.getText() + "'" + newline);        
        txaScript.append(");" + newline);
        txaScript.append("STEP Drop_Table" + newline);
        txaScript.append("(" + newline);
        txaScript.append("APPLY" + newline);
        txaScript.append("(' DROP TABLE " + txtDataBaseName.getText() + "." + txtJobName.getText() + ";')," + newline);
        txaScript.append("(' DROP TABLE " + txtDataBaseName.getText() + "." + txtErr1Table.getText() + ";')," + newline);
        txaScript.append("(' DROP TABLE " + txtDataBaseName.getText() + "." + txtErr2Table.getText() + ";')," + newline);
        txaScript.append("(' DROP TABLE " + txtDataBaseName.getText() + "." + txtLogTable.getText() + ";')" + newline);
        txaScript.append("TO OPERATOR (DDL_OPERATOR);" + newline);
        txaScript.append(");" + newline);
        txaScript.append("STEP Create_Table" + newline);
        txaScript.append("(" + newline);
        txaScript.append("APPLY" + newline);
        txaScript.append("(" + newline);       
        txaScript.append("'CREATE MULTISET TABLE " + txtDataBaseName.getText() + "." + txtJobName.getText() + newline);
        txaScript.append(", NO FALLBACK ," + newline);
        txaScript.append("NO BEFORE JOURNAL," + newline);
        txaScript.append("NO AFTER JOURNAL," + newline);
        txaScript.append("CHECKSUM = DEFAULT," + newline);
        txaScript.append("DEFAULT MERGEBLOCKRATIO" + newline);
        txaScript.append("(" + newline);
        listarColumnas("",2);
        txaScript.append(")" + newline);
        txaScript.append(listarIndicePrimario() + newline);
        txaScript.append("'" + newline);
        txaScript.append(")" + newline);
        txaScript.append("TO OPERATOR (DDL_OPERATOR);" + newline);
        txaScript.append(");" + newline);
        txaScript.append("STEP load_data_from_file" + newline);
        txaScript.append("(" + newline);
        txaScript.append("APPLY" + newline);
        txaScript.append("(" + newline);
        txaScript.append("'INSERT INTO " + txtDataBaseName.getText() + "." + txtJobName.getText() + newline);
        txaScript.append("(" + newline);
        listarColumnas("",0);
        txaScript.append(") VALUES (" + newline);
        listarColumnas(":",0);
        txaScript.append(");')TO OPERATOR" + newline);
        txaScript.append("(W_1_o_TPT[2])" + newline);
        txaScript.append("SELECT * FROM OPERATOR" + newline);
        txaScript.append("(W_0_o_TPT[2]);););" + newline);
        lblMessage.setText("Successful Generation. tbuild -f " + MESSAGE_SCRIPT);
    }
    private void gntGenerarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gntGenerarMouseClicked
        // TODO add your handling code here:
        boolean ivalidacion;
        DefaultTableModel yourModel;
        lblMessage.setText(MESSAGE_OK);
        txaScript.setText("");
        ivalidacion=validacionCuadroTexto(txtJobName,"Error: The Job Name field is empty");
        if(ivalidacion==true)
        {
            ivalidacion=validacionCuadroTexto(txtInputPath,"Error: The Input Path field is empty");
            if(ivalidacion==true)
            {
                ivalidacion=validacionCuadroTexto(txtFileName,"Error: The File Name field is empty");
                if(ivalidacion==true)
                {
                    ivalidacion=validacionCuadroTexto(txtUserName,"Error: The User Name field is empty");
                    if(ivalidacion==true)
                    {
                        ivalidacion=validacionCuadroTexto(txtPassword,"Error: The Password field is empty");
                        if(ivalidacion==true)
                        {
                            ivalidacion=validacionCuadroTexto(txtServer,"Error: The Server field is empty");
                            if(ivalidacion==true)
                            {
                                ivalidacion=validacionCuadroTexto(txtDataBaseName,"Error: The DataBase Name field is empty");
                                if(ivalidacion==true)
                                {
                                    ivalidacion=validacionCuadroTexto(txtWorkTable,"Error: The Work table field is empty");
                                    if(ivalidacion==true)
                                    {
                                        ivalidacion=validacionCuadroTexto(txtLogTable,"Error: The Log table field is empty");
                                        if(ivalidacion==true)
                                        {
                                            ivalidacion=validacionCuadroTexto(txtErr1Table,"Error: The Error 1 field is empty");
                                            if(ivalidacion==true)
                                            {
                                                ivalidacion=validacionCuadroTexto(txtErr2Table,"Error: The Error 2 field is empty");
                                                if(ivalidacion==true)
                                                {
                                                    ivalidacion=validacionCuadroTexto(txtDelimiter,"Error: The Delimiter field is empty");
                                                    if(ivalidacion==true)
                                                    {
                                                        yourModel = (DefaultTableModel) this.tblColumns.getModel();
                                                        if(yourModel.getRowCount()>0)
                                                        {                                                            
                                                            generarScript();
                                                        }
                                                        else
                                                            lblMessage.setText("Error: There aren't columns in the table");                                                        
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }    
            }
        }        
        
    }//GEN-LAST:event_gntGenerarMouseClicked
    private void habilitarTextoDecimal(boolean itxtLength,boolean itxtTotalDigits,boolean itxtFractionalDigits)
    {
        txtLength.setText("");
        txtTotalDigits.setText("");
        txtFractionalDigits.setText("");
        txtLength.setEnabled(itxtLength);
        txtTotalDigits.setEnabled(itxtTotalDigits);
        txtFractionalDigits.setEnabled(itxtFractionalDigits);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntAddColumn;
    private javax.swing.JButton bntDelColumn;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cboDataType;
    private javax.swing.JCheckBox chkIspi;
    private javax.swing.JCheckBox chkIspk;
    private javax.swing.JButton gntGenerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblInputPath;
    private javax.swing.JLabel lblInputPath1;
    private javax.swing.JLabel lblInputPath10;
    private javax.swing.JLabel lblInputPath11;
    private javax.swing.JLabel lblInputPath2;
    private javax.swing.JLabel lblInputPath3;
    private javax.swing.JLabel lblInputPath4;
    private javax.swing.JLabel lblInputPath5;
    private javax.swing.JLabel lblInputPath6;
    private javax.swing.JLabel lblInputPath7;
    private javax.swing.JLabel lblInputPath8;
    private javax.swing.JLabel lblInputPath9;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblScript;
    private javax.swing.JPanel pnlJob;
    private javax.swing.JPanel pnlVentanaPrincipal;
    private javax.swing.JTabbedPane tabPanelJob;
    private javax.swing.JTable tblColumns;
    private javax.swing.JTextArea txaScript;
    private javax.swing.JTextField txtColumnName;
    private javax.swing.JTextField txtDataBaseName;
    private javax.swing.JTextField txtDelimiter;
    private javax.swing.JTextField txtErr1Table;
    private javax.swing.JTextField txtErr2Table;
    private javax.swing.JTextField txtFileName;
    private javax.swing.JTextField txtFractionalDigits;
    private javax.swing.JTextField txtInputPath;
    private javax.swing.JTextField txtJobName;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtLogTable;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtServer;
    private javax.swing.JTextField txtTotalDigits;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtWorkTable;
    // End of variables declaration//GEN-END:variables
}
